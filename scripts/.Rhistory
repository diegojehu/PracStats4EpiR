t.test(LDLC~agegp, data=w.hall.data)[5],
"-",
t.test(LDLC~agegp, data=w.hall.data)[5],
")")
paste0("[",
t.test(LDLC~agegp, data=w.hall.data)[4][1],
"-",
t.test(LDLC~agegp, data=w.hall.data)[4][2],
")")
paste0("(",
t.test(LDLC~agegp, data=w.hall.data)[4][1],
"-",
t.test(LDLC~agegp, data=w.hall.data)[4][2],
")", sep="")
paste0("(",
t.test(LDLC~agegp, data=w.hall.data)[4],
"-",
t.test(LDLC~agegp, data=w.hall.data)[4],
")", sep=""
)
round(t.test(LDLC~agegp, data=w.hall.data)[4])
t.test(LDLC~agegp, data=w.hall.data)[4]
t.test(LDLC~agegp, data=w.hall.data)[4][1]
t.test(LDLC~agegp, data=w.hall.data)[4,1]
t.test(LDLC~agegp, data=w.hall.data)$conf.int
t.test(LDLC~agegp, data=w.hall.data)$conf.int[1]
t.test(LDLC~agegp, data=w.hall.data)$conf.int[2]
desc <- c(
"mean LDLC where age<76  (x1)",
"mean LDLC where age>=76 (x2)",
"mean difference (x1-x2)",
"test statistic t",
"95% CI for mean difference",
"p-value"
)
value <- c(
round(mean(w.hall.data$LDLC[w.hall.data$agegp == 1],na.rm=T),2),
round(mean(w.hall.data$LDLC[w.hall.data$agegp == 2],na.rm=T),2),
round(
mean(w.hall.data$LDLC[w.hall.data$agegp == 1],na.rm=T) -
mean(w.hall.data$LDLC[w.hall.data$agegp == 2],na.rm=T),2),
t.test(LDLC~agegp, data=w.hall.data)[[1]],
paste0("(",
round(t.test(LDLC~agegp, data=w.hall.data)$conf.int[1],3),
"-",
round(t.test(LDLC~agegp, data=w.hall.data)$conf.int[2],3),
")", sep=""),
t.test(LDLC~agegp, data=w.hall.data)[3]
)
data.md1 <- data.frame(
Description=desc,
Value=value
)
View(data.md1)
View(value)
t.test(LDLC~agegp, data=w.hall.data)$statistic[1]
desc <- c(
"mean LDLC where age<76  (x1)",
"mean LDLC where age>=76 (x2)",
"mean difference (x1-x2)",
"test statistic t",
"95% CI for mean difference",
"p-value"
)
value <- c(
round(mean(w.hall.data$LDLC[w.hall.data$agegp == 1],na.rm=T),2),
round(mean(w.hall.data$LDLC[w.hall.data$agegp == 2],na.rm=T),2),
round(
mean(w.hall.data$LDLC[w.hall.data$agegp == 1],na.rm=T) -
mean(w.hall.data$LDLC[w.hall.data$agegp == 2],na.rm=T),2),
t.test(LDLC~agegp, data=w.hall.data)$statistic[1],
paste0("(",
round(t.test(LDLC~agegp, data=w.hall.data)$conf.int[1],3),
"-",
round(t.test(LDLC~agegp, data=w.hall.data)$conf.int[2],3),
")", sep=""),
t.test(LDLC~agegp, data=w.hall.data)$p.value
)
data.md1 <- data.frame(
Description=desc,
Value=value
)
View(data.md1)
?power.t.test
helpfile<-utils:::.getHelpFile(help("power.prop.test"))
View(helpfile)
power.t.test(delta=5, sd=15, sig.level=0.05, power=0.9)
power.t.test(delta=1, sd=1, sig.level=0.05, power=0.9)
ggplot(mapping = aes(x=samplesizes, y=power.samplesizes)) +
geom_point() +
theme_classic()
samplesizes <- seq(from=200, to=2000, by=200)
power.samplesizes <- power.prop.test(n=samplesizes, p1=0.1, p2=0.15)$power
ggplot(mapping = aes(x=samplesizes, y=power.samplesizes)) +
geom_point() +
theme_classic()
ggplot(aes(x=samplesizes, y=power.samplesizes)) +
geom_point() +
geom_line() +
theme_classic()
ggplot(aes(x=samplesizes, y=power.samplesizes)) +
geom_line() +
geom_point() +
theme_classic()
ggplot(mapping=aes(x=samplesizes, y=power.samplesizes)) +
geom_line() +
geom_point() +
theme_classic()
ggplot(mapping=aes(x=samplesizes, y=power.samplesizes)) +
geom_line() +
geom_point() +
theme_classic() +
ggtitle("Power by sample size")
tree()
if (!require("pacman")) install.packages("pacman")
pacman::p_load(devtools)
if (!require("emo")) devtools::install_github("hadley/emo")
pacman::p_load(knitr,emo)
knitr::opts_chunk$set(echo = TRUE)
if (file.exists(here::here("data"))) {
cat("The folder already exists")
}
else {
file.exists(here::here("data"))
cat("The folder already exists")
dir.create(folder)
if (file.exists(here::here("data"))) {
cat("The folder already exists")
}
else {
if (file.exists(here::here("test"))) {
cat("The folder already exists")
} else {
dir.create(here::here("test"))
}
if (file.exists(here::here("test"))) {
cat("The folder already exists")
} else {
dir.delete(here::here("test"))
}
test.df <- rio::import(here::here("data", "STEPS_EpiInfo_Test.xlsx"))
View(test.df)
skimr::skim(test.df)
View(test.df)
if (!require("pacman")) install.packages("pacman")
pacman::p_load(devtools)
if (!require("emo")) devtools::install_github("hadley/emo")
pacman::p_load(tidyverse,here,rio,knitr,emo,skim,ggplot2,janitor)
knitr::opts_chunk$set(echo = TRUE)
steps.data <- import(here("data", "STEPS_EpiInfo_Test.xlsx"), na.strings="")
View(steps.data)
steps.data <- import(here("data", "STEPS_EpiInfo_Test.xlsx"), na="")
View(steps.data)
str(steps.data)
summary(steps.data)
knitr::opts_chunk$set(echo = TRUE)
if (!require("pacman")) install.packages("pacman")
knitr::opts_chunk$set(echo = TRUE)
if (!require("pacman")) install.packages("pacman")
pacman::p_load(gifski, ggplot2, rio, here, janitor, skimr, forcats, lubridate, tidyverse, gtsummary, rstatix, flextable, gt, webshot)
if(webshot::is_phantomjs_installed()==F)webshot::install_phantomjs()
steps_test_raw <- import(here("data", "STEPS_EpiInfo_Test.xlsx"))
skimr::skim(steps_test_raw)
steps_test <- steps_test_raw %>%
janitor::clean_names() %>%
# New name     # Old name
rename(sex          = c1,
age          = c3,
curr_smkr    = t1,
daily_smkr   = t2,
curr_alc     = a1,
freq_alc     = a2,
bp_last_meas = h1,
height_cm    = m3,
weight_kg    = m4,
sbp_1        = m11a,
sbp_2        = m12a,
sbp_3        = m13a) %>%
mutate(sbp = (sbp_1+sbp_2+sbp_3)/3, # Here I simply calculate the mean of the 3 sbp measurements
sex_fct = factor(sex, labels = c("Men", "Women"))) # Originally coded as 1 and 2
steps_test_lec1 <- steps_test %>%
select(c(sex_fct,sbp,sex)) %>%
drop_na() %>%
add_row(sbp = 540, sex_fct = as.factor("Women")) %>%
add_row(sbp = 538, sex_fct = as.factor("Women")) %>%
add_row(sbp = 542, sex_fct = as.factor("Women")) %>%
add_row(sbp = 540, sex_fct = as.factor("Women")) %>%
add_row(sbp = 538, sex_fct = as.factor("Women")) %>%
add_row(sbp = 542, sex_fct = as.factor("Women")) %>%
add_row(sbp = 540, sex_fct = as.factor("Women")) %>%
add_row(sbp = 538, sex_fct = as.factor("Women")) %>%
add_row(sbp = 542, sex_fct = as.factor("Women")) %>%
add_row(sbp = 540, sex_fct = as.factor("Women"))
#Make table, then export as png, adding p values for differences in mean
step.table <- c()
model.names <- c("Before cleaning", "After dropping implausible values", "After dropping outliers")
sd.3 <- mean(na.omit(steps_test_lec1$sbp[steps_test_lec1$sbp<250])) + 3* sd(na.omit(steps_test_lec1$sbp[steps_test_lec1$sbp<250]))
df.list <- list(
steps_test_lec1,
filter(steps_test_lec1, sbp <250),
filter(steps_test_lec1, sbp < sd.3)
)
for (i in 1:length(model.names)){
mod.name <- model.names[i]
mean_men <- stringr::str_glue("{round(mean(df.list[[i]]$sbp[df.list[[i]]$sex_fct=='Men'],na.rm=T),1)} ({round(sd(df.list[[i]]$sbp[df.list[[i]]$sex_fct=='Men'],na.rm=T), 1)})")
mean_women <- stringr::str_glue("{round(mean(df.list[[i]]$sbp[df.list[[i]]$sex_fct=='Women'],na.rm=T),1)} ({round(sd(df.list[[i]]$sbp[df.list[[i]]$sex_fct=='Women'],na.rm=T), 1)})")
diff <- stringr::str_glue("{round(mean(df.list[[i]]$sbp[df.list[[i]]$sex_fct=='Men'],na.rm=T) - mean(df.list[[i]]$sbp[df.list[[i]]$sex_fct=='Women'],na.rm=T), 1)} ({round(t.test(sbp ~ sex_fct,data=df.list[[i]])[[4]],1)[1]}, {round(t.test(sbp ~ sex_fct,data=df.list[[i]])[[4]],1)[2]})")
t_t <- round(t.test(sbp ~ sex_fct, data=df.list[[i]])[[3]], 3)
if(t_t<0.001)t_t <- "<0.001"
build.df <- data.frame(
"Model"=mod.name,
"Men"=mean_men,
"Women"=mean_women,
"Diff_in_means"=diff,
"p-val"=t_t)
step.table <- rbind(step.table,build.df)
}
step.table.1 <-
step.table[1,] %>%
flextable() %>%
autofit() %>%
add_header_row(
top=TRUE,
values=c("",
"Mean (SD)",
"",
"",
"")) %>%
set_header_labels(
Model = "",
Men = "Men",
Women = "Women",
Diff_in_means = "Difference in means (95% CI)",
p.val = "p-value") %>%
merge_at(i=1, j=2:3,part="header") %>%
flextable::align(align="center",j=c(2:3),part="header") %>%
bold(i=1,bold=TRUE,part="header") %>%
save_as_image(path = "figs/step-tbl-1.png")
step.table.2 <-
step.table[1:2,] %>%
flextable() %>%
autofit() %>%
add_header_row(
top=TRUE,
values=c("",
"Mean (SD)",
"",
"",
"")) %>%
set_header_labels(
Model = "",
Men = "Men",
Women = "Women",
Diff_in_means = "Difference in means (95% CI)",
p.val = "p-value") %>%
merge_at(i=1, j=2:3,part="header") %>%
flextable::align(align="center",j=c(2:3),part="header") %>%
bold(i=1,bold=TRUE,part="header") %>%
save_as_image(path = "figs/step-tbl-2.png")
step.table.3 <-
step.table %>%
flextable() %>%
autofit() %>%
add_header_row(
top=TRUE,
values=c("",
"Mean (SD)",
"",
"",
"")) %>%
set_header_labels(
Model = "",
Men = "Men",
Women = "Women",
Diff_in_means = "Difference in means (95% CI)",
p.val = "p-value") %>%
merge_at(i=1, j=2:3,part="header") %>%
flextable::align(align="center",j=c(2:3),part="header") %>%
bold(i=1,bold=TRUE,part="header") %>%
save_as_image(path = "figs/step-tbl-3.png")
plot1a.df <- steps_test_lec1 %>%
filter(sex_fct=="Women")
plot1a <-
ggplot(data = plot1a.df, mapping = aes(x = sbp)) +
geom_histogram(binwidth = 5, color = "white", fill = "cadetblue") +
#geom_density() +
labs(
title = "Systolic blood pressure in women",
subtitle = stringr::str_glue("N={dim(plot1a.df)[1]}\nWHO STEPS training dataset"),
x = "SBP",
caption = stringr::str_glue("Mean SBP = {round(mean(plot1a.df$sbp),2)} (SD {round(sd(plot1a.df$sbp),2)}) mmHg")
) +
theme_classic() #+
#facet_wrap(~sex_fct)
plot1a
ggsave(plot1a, filename = here("figs","plot1a.png"), width = 5, height = 4)
plot1b.df <- plot1a.df %>%
filter(sbp < 250)
plot1b <-
ggplot(data = plot1b.df, mapping = aes(x = sbp)) +
geom_histogram(binwidth = 5, color = "white", fill = "cadetblue") +
#geom_density() +
labs(
title = "Systolic blood pressure in women",
subtitle = stringr::str_glue("N={dim(plot1b.df)[1]}\nWHO STEPS training dataset"),
x = "SBP",
caption = stringr::str_glue("Mean SBP = {round(mean(plot1b.df$sbp),2)} (SD {round(sd(plot1b.df$sbp),2)}) mmHg")
) +
theme_classic() #+
#facet_wrap(~sex_fct)
plot1b
ggsave(plot1b, filename = here("figs","plot1b.png"), width = 5, height = 4)
plot2.df <- steps_test_lec1 %>%
filter(sbp < 250)
plot2<-
ggplot(data = plot2.df, mapping = aes(x = sbp)) +
geom_histogram(binwidth = 5, color = "white", fill = "firebrick") +
#geom_density() +
labs(
title = "Systolic blood pressure in men and women",
subtitle = stringr::str_glue("N={dim(plot2.df)[1]}\nWHO STEPS training dataset"),
x = "SBP",
caption = stringr::str_glue("Mean SBP = {round(mean(plot2.df$sbp),2)} (SD {round(sd(plot2.df$sbp),2)}) mmHg")
) +
theme_classic() +
#facet_wrap(~sex_fct)
geom_vline(
xintercept = mean(plot2.df$sbp)+3*sd(plot2.df$sbp),
color = "black",
linetype = 2,
alpha = 0.8) +
geom_text(
x = mean(plot2.df$sbp)+3.4*sd(plot2.df$sbp),
y = 100,
label = "3-SD"
)
plot2
ggsave(plot2, filename = here("figs","plot2.png"), width = 5, height = 4)
plot3<-
ggplot(data = plot2.df, mapping = aes(y = sbp)) +
geom_boxplot(fill = "firebrick", width = 0.8) +
#geom_density() +
labs(
title = "Systolic blood pressure in men and women",
subtitle = stringr::str_glue("N={dim(plot2.df)[1]}\nWHO STEPS training dataset"),
y = "SBP",
x = "",
caption = stringr::str_glue(
"Mean SBP = {round(mean(plot2.df$sbp),2)} (SD {round(sd(plot2.df$sbp),2)}) mmHg\nMedian SBP = {round(quantile(plot2.df$sbp[3]),2)} (IQR {round(quantile(plot2.df$sbp[2]),2)}, {round(quantile(plot2.df$sbp[4]),2)}) mmHg")
) +
theme_classic() +
#facet_wrap(~sex_fct)
geom_hline(
yintercept = mean(plot2.df$sbp)+3*sd(plot2.df$sbp),
color = "black",
linetype = 2,
alpha = 0.8) +
geom_text(
y = mean(plot2.df$sbp)+3.4*sd(plot2.df$sbp),
x = -0.35,
label = "3-SD") +
scale_x_discrete(breaks = NULL)
plot3
steps_test_1 <- dplyr::select(steps_test,one_of("ID", "H1", "M3", "M4", "M11A", "M12A", "M13A"))
names(steps_test)
summary(steps_test)
str(steps_test)
#steps_test_1 <- dplyr::select(steps_test,one_of("id", "H1", "M3", "M4", "M11A", "M12A", "M13A"))
#steps_test_2 <- dplyr::select(steps_test,-c(H1:M13A))
steps_export <- steps_test %>%
select(one_of("sex_fct","age","curr_smkr","daily_smkr","curr_alc","freq_alc","bp_last_meas","height_cm","weight_kg","sbp_1","sbp_2","sbp_3")) %>%
mutate(gender = sex_fct) # Originally coded as 1 and 2
steps_export <- steps_test %>%
mutate(gender = sex_fct) %>%
select(one_of("gender","age","curr_smkr","daily_smkr","curr_alc","freq_alc","bp_last_meas","height_cm","weight_kg","sbp_1","sbp_2","sbp_3"))
View(steps_export)
export(steps_export, here("data","WHO-STEPS-training.csv"))
pacman::p_load(tidyverse,here,rio,knitr,emo,skim,ggplot2,janitor)
if (!require("pacman")) install.packages("pacman")
pacman::p_load(devtools)
if (!require("emo")) devtools::install_github("hadley/emo")
pacman::p_load(tidyverse,here,rio,knitr,emo,skimr,ggplot2,janitor)
knitr::opts_chunk$set(echo = TRUE)
here()
here("data","WHO-STEPS-training.csv")
knitr::include_graphics("img/R_data_structures.png")
steps.data <- import(here("data", "WHO-STEPS-training.csv"))
dim(steps.data)
nrow(steps.data)
ncol(steps.data)
dim(steps.data)[1]
# same as
nrow(steps.data)
dim(steps.data)[2]
# same as
ncol(steps.data)
head(steps.data,n=5)
tail(steps.data,n=5)
str(steps.data)
summary(steps.data)
summary(steps.data$sbp_1)
mean(steps.data$height_cm)
mean(steps.data$height_cm, na.rm=TRUE) # na.rm removes missings
hist(steps.data$age, main="Histogram of age")
hist(steps.data$height_cm, main="Histogram of height")
boxplot(steps.data$height_cm, main="Boxplot of height")
boxplot(steps.data$height_cm[steps.data$height_cm>120], main="Boxplot of height")
histogram(steps.data$height_cm[steps.data$height_cm>100], main="Histogram of height")
hist(steps.data$height_cm[steps.data$height_cm>100], main="Histogram of height")
boxplot(steps.data$height_cm[steps.data$height_cm>100], main="Boxplot of height")
plot2.df <- steps.data %>%  # Make a new data frame for plotting
mutate(sbp = (sbp_1+sbp_2+sbp_3)/3) %>% # Compute sbp as the average of the three sbp measures available
filter(sbp < 250) %>% # Filter out those with implausibly high levels of sbp
select(one_of("sbp","gender")) %>% # Only keep the variables sbp and gender
drop_na() # Drop missing observations
View(plot2.df)
steps.data$height_cm
steps.data$bmi <- NA # It is a good idea to start a new variable by defininf the column as all observations missing
steps.data$bmi <- steps.data$weight_kg / ((steps.data$height_cm)/100)^2
View(steps.data)
summary(steps.data$bmi)
hist(steps.data$bmi, main="Histogram of BMI")
boxplot(steps.data$bmi, main="Boxplot of BMI")
boxplot(steps.data$bmi[steps.data$bmi<100], main="Boxplot of BMI")
summary(steps.data$bmi)
hist(steps.data$bmi, main="Histogram of BMI")
boxplot(steps.data$bmi, main="Boxplot of BMI")
steps.data$bmi[steps.data$bmi>60] <- NA
summary(steps.data$bmi)
hist(steps.data$bmi, main="Histogram of BMI")
boxplot(steps.data$bmi, main="Boxplot of BMI")
hist(steps.data$bmi, breaks=30, main="Histogram of BMI")
vec.a <- c(1,2,4,5,6,7,8,3)
vec.b <- c(2,3,6,7,8,9,5,4)
vec.c <- vec.a+vec.b
vec.c
♠summary(steps.data$height_cm)
summary(steps.data$height_cm)
steps.data$bmi_who<-NA #Define the row as all missing
steps.data$bmi_who[steps.data$bmi<18.5]<-0 #Those with bmi <18.5 assigned with a 0 in column bmi_who
steps.data$bmi_who[steps.data$bmi>=18.5 & steps.data$bmi<25]<-1 #Those with bmi 18.5-24.9 assigned with a 1 in column bmi_who
steps.data$bmi_who[steps.data$bmi>=25 & steps.data$bmi<30]<-2 #Those with bmi 25-29.9 assigned with a 3 in column bmi_who
steps.data$bmi_who[steps.data$bmi>=30]<-3 #Those with bmi <18.5 assigned with a 0 in column bmi_who
summary(steps.data$bmi_who)
class(steps.data$bmi_who)
steps.data$bmi_who <- steps.data$bmi_who
summary(steps.data$bmi_who)
steps.data$bmi_who <- as.factor(steps.data$bmi_who)
steps.data$bmi_who <- as.factor(steps.data$bmi_who)
summary(steps.data$bmi_who)
steps.data$bmi_who <- as.factor(steps.data$bmi_who, # define as factor
labels=c("<18.5", "18.5-24.9", "25-29.9", ">30")) #add labels
steps.data$bmi_who <- factor(steps.data$bmi_who, # define as factor
labels=c("<18.5", "18.5-24.9", "25-29.9", ">30")) #add labels
summary(steps.data$bmi_who)
steps.data$bmi_who2 <- cut(steps.data$bmi, # defines as factor
breaks=c(18.5,25,30), # defines breaks
labels=c("<18.5", "18.5-24.9", "25-29.9", ">30")) # adds label
steps.data$bmi_who2 <- cut(steps.data$bmi, # defines as factor
breaks=c(18.5,25,30))
summary(steps.data$bmi_who2)
steps.data$bmi_who2 <- cut(steps.data$bmi, # defines as factor
breaks=c(0,18.5,25,30))#,
summary(steps.data$bmi_who2)
steps.data$bmi_who2 <- cut(steps.data$bmi, # defines as factor
breaks=c(0,18.5,25,30,100), # defines breaks
labels=c("<18.5", "18.5-24.9", "25-29.9", ">30")) # adds label
summary(steps.data$bmi_who2)
summary(steps.data$bmi_who)
table(steps.data$bmi_who)
table(steps.data$bmi_who,steps.data$bmi_who2)
new.steps.data$bmi<-steps.data$sbp
new.steps.data<-data.frame(
"bmi"=steps.data$bmi,
"gender"=steps.data$gender)
View(new.steps.data)
new.steps.data.2<-subset(steps.data,
age > 50,
select = c(age, bmi, gender))
pacman::p_load(naniar)
gg_miss_var(steps.data, show_pct=T)
gg_miss_var(steps.data, show_pct=T, facet = gender)
gg_miss_var(steps.data, show_pct=T, facet = as.factor(gender))
steps.data %>%
mutate(sex = as.factor(gender)) %>%
gg_miss_var(steps.data, show_pct=T, facet = gender)
steps.data %>%
mutate(sex = as.factor(gender)) %>%
gg_miss_var(show_pct=T, facet = gender)
steps.data %>%
mutate(sex = as.factor(gender)) %>%
gg_miss_var(show_pct=T, facet = sex)
steps.data <- import(here("data", "WHO-STEPS-training.csv"), na="") #In this data, missing values are in blank
lm(sbp_1 ~ age, data = steps.data)
lm(sbp_1 ~ age, data = steps.data[steps.data$gender=="Women"])
steps.data[steps.data$gender=="Women"]
steps.data[,gender=="Women"]
steps.data[,steps.data$gender=="Women"]
lm(sbp_1 ~ age, data = steps.data[,steps.data$age>50])
lm(sbp_1 ~ age, data = subset(steps.data,age>50))
ab<-lm(sbp_1 ~ age, data = subset(steps.data,age>50))
ab
summarise(ab)
display(ab)
ab<-lm(sbp_1 ~ gender+age, data = subset(steps.data,age>50))
ab
lm(sbp_1 ~ gender+age, data = subset(steps.data,age>50))
View(ab)
print(ab)
summary(ab)
rm(list = ls())
gc()
